<?xml version="1.0" encoding="UTF-8"?>
<!-- 
     PrepareStatement / ResultSet 관련 => SQL
     myBatis => ORM => 관계형 데이터베이스를 연동하는 클래스의 집합
     hibernate => JPA
         public BoardVO findByNo(int no);
                       =======WHERE no=10
          Select * FROM board
 -->
 <!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.dao.board-mapper">
<!-- MyBatis는 한 개의 태그에 한 개의 SQL문을 지정해야 한다 : CRUD -->
<!-- 반복 제거 -->
<sql id="where-no">
  WHERE no=#{no}
</sql>
  <!-- 목록 출력 -->
  <!-- 
      SELECT ==  resultType: 실행 결과값, parameterType:매개변수
      INSERT / UPDATE / DELETE == parameterType
      ==> ? 대신 #{컬럼명} 사용
      
      ${}: 테이블이나 컬럼명이 들어왔을 때 ${board} => board
      #{}: setString(getName()), '' 이미 붙음 #{board} => 'board'
  -->
  <select id="boardListData" resultType="BoardVO" parameterType="hashmap">
    SELECT no,subject,name,regdate,TO_CHAR(regdate,'YYYY-MM-DD') as dbday,hit,num 
    FROM (SELECT no,subject,name,regdate,hit,rownum as num 
    FROM (SELECT no,subject,name,regdate,hit 
    FROM board ORDER BY no DESC))
    WHERE num BETWEEN #{start} AND #{end}
  </select>
  <!-- 총페이지 -->
  <select id="boardTotalPage" resultType="int">
    SELECT CEIL(COUNT(*)/10.0) FROM board
    <!-- WHERE no&lt;10 => 부등호 사용 불가-->
  </select>
  <!-- 데이터 추가(글쓰기) -->
  <insert id="boardInsert" parameterType="BoardVO">
    <!-- MyBatis 시퀀스 만들기 -->
    <selectKey keyProperty="no" resultType="int" order="BEFORE">
      SELECT NVL(MAX(no)+1,1) as no FROM board
    </selectKey>
    INSERT INTO board VALUES(#{no},#{name},#{subject},#{content},#{pwd},SYSDATE,0)
  </insert>
  <!-- 
       #{name} => vo.getName()
       {} => getXxx()
   -->
  <!-- 조회수 증가 -->
  <update id="hitIncrement" parameterType="int">
    UPDATE board SET
    hit=hit+1
    <include refid="where-no"/>
  </update>
  <!-- 상세보기 -->
  <select id="boardDetailData" resultType="BoardVO" parameterType="int">
    SELECT * FROM board
    <include refid="where-no"/>
  </select>
  <!-- 비밀번호 읽기 -->
  <select id="boardGetPassword" resultType="string" parameterType="int">
    SELECT pwd FROM board
    <include refid="where-no"/>
  </select>
  <!-- 삭제하기 -->
  <delete id="boardDelete" parameterType="int">
    DELETE FROM board
    <include refid="where-no"/>
  </delete>
  <!-- 수정하기 -->
  <update id="boardUpdate" parameterType="BoardVO">
    UPDATE board SET
    name=#{name},subject=#{subject},content=#{content}
    <include refid="where-no"/>
  </update>
</mapper>